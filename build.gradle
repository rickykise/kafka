plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'ai.fassto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.3")
}


dependencies {
    /* Spring boot */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    /* kafka */
    implementation 'org.springframework.kafka:spring-kafka:2.9.0'

    /* DB */
    implementation 'mysql:mysql-connector-java:8.0.30'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.7.2'

    /* swagger */
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.9'
    implementation 'org.projectlombok:lombok:1.18.22'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation group: 'io.netty', name: 'netty-codec-http', version: '4.1.80.Final'
    implementation group: 'me.paulschwarz', name: 'spring-dotenv', version: '2.5.4'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'com.github.0xshamil:java-xid:1.0.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}


jib {
    container {
        creationTime = "USE_CURRENT_TIMESTAMP"
        mainClass = 'ai.fassto.kafka.KafkaApplication'
    }

    from {
        image = "amazoncorretto:17"
        platforms {
            platform {
                architecture = "amd64"
                os = "linux"
            }
        }
    }
}
